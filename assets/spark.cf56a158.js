import{B as u}from"./BackToTopButton.a5a2f696.js";import{d as E,o as F,c as B,b as A,F as D,e as a}from"./index.8f841a57.js";const C=a(`<title>Blog Spark</title><div class="container"><div class="content"><h1 id="%E8%AE%A1%E7%AE%97%E6%A1%86%E6%9E%B6-spark">\u8BA1\u7B97\u6846\u67B6 Spark</h1><p>\u76EE\u5F55</p><ol><li><a href="#%E8%AE%A1%E7%AE%97%E6%A1%86%E6%9E%B6-spark">\u8BA1\u7B97\u6846\u67B6 Spark</a><ol><li><a href="#spark">Spark</a><ol><li><a href="#spark-%E4%B8%AD-job-stage-task-%E5%88%86%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88">Spark \u4E2D job, stage, Task \u5206\u522B\u662F\u4EC0\u4E48</a></li><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AF-rdd">\u4EC0\u4E48\u662F RDD</a><ol><li><a href="#reducebykey-%E5%92%8C-groupbykey-%E7%9A%84%E5%8C%BA%E5%88%AB">reduceByKey \u548C groupByKey \u7684\u533A\u522B</a></li><li><a href="#rdd-%E7%9A%84%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F">RDD \u7684\u521B\u5EFA\u65B9\u5F0F</a></li><li><a href="#rdd-%E7%9A%84%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB">RDD \u7684\u4F9D\u8D56\u5173\u7CFB</a></li><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%92%E5%88%86%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB">\u4E3A\u4EC0\u4E48\u8981\u5212\u5206\u4F9D\u8D56\u5173\u7CFB</a></li><li><a href="#rdd-%E7%9A%84%E7%BC%93%E5%AD%98%E6%8C%81%E4%B9%85%E5%8C%96%E6%9C%BA%E5%88%B6">RDD \u7684\u7F13\u5B58\u6301\u4E45\u5316\u673A\u5236</a></li></ol></li><li><a href="#spark-%E8%B0%83%E4%BC%98">Spark \u8C03\u4F18</a><ol><li><a href="#%E4%BF%AE%E6%94%B9%E5%BA%8F%E5%88%97%E5%8C%96%E6%9C%BA%E5%88%B6%E5%8E%8B%E7%BC%A9%E6%95%B0%E6%8D%AE%E9%87%8F">\u4FEE\u6539\u5E8F\u5217\u5316\u673A\u5236\u538B\u7F29\u6570\u636E\u91CF</a></li><li><a href="#%E6%A0%B9%E6%8D%AE%E4%BD%9C%E4%B8%9A%E7%8E%AF%E5%A2%83-%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1%E6%97%B6%E8%B0%83%E6%95%B4-spark-submitsh-%E5%8F%82%E6%95%B0">\u6839\u636E\u4F5C\u4E1A\u73AF\u5883, \u63D0\u4EA4\u4EFB\u52A1\u65F6\u8C03\u6574 spark-submit.sh \u53C2\u6570</a></li><li><a href="#%E6%8F%90%E9%AB%98%E5%B9%B6%E8%A1%8C%E5%BA%A6">\u63D0\u9AD8\u5E76\u884C\u5EA6</a></li><li><a href="#rdd-%E7%9A%84%E9%87%8D%E7%94%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96">RDD \u7684\u91CD\u7528\u548C\u6301\u4E45\u5316</a></li><li><a href="#%E9%80%82%E5%BD%93%E5%B9%BF%E6%92%AD%E5%A4%9A%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%9A%84%E5%8F%98%E9%87%8F">\u9002\u5F53\u5E7F\u64AD\u591A\u6B21\u4F7F\u7528\u7684\u53D8\u91CF</a></li><li><a href="#%E9%81%BF%E5%85%8D%E4%BA%A7%E7%94%9F-shuffle-%E5%8F%AF%E4%BB%A5%E5%87%8F%E5%B0%91%E7%BD%91%E7%BB%9C-io-%E5%92%8C%E5%88%86%E5%8C%BA%E9%97%B4%E4%BC%A0%E8%BE%93%E6%B6%88%E8%80%97">\u907F\u514D\u4EA7\u751F Shuffle \u53EF\u4EE5\u51CF\u5C11\u7F51\u7EDC IO \u548C\u5206\u533A\u95F4\u4F20\u8F93\u6D88\u8017</a></li><li><a href="#%E4%BD%BF%E7%94%A8-map-side-%E9%A2%84%E5%85%88%E8%81%9A%E5%90%88-shuffle">\u4F7F\u7528 map-side \u9884\u5148\u805A\u5408 Shuffle</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E9%AB%98%E6%80%A7%E8%83%BD%E7%AE%97%E5%AD%90">\u4F7F\u7528\u9AD8\u6027\u80FD\u7B97\u5B50</a></li></ol></li><li><a href="#sparkstreaming-%E5%9C%A8%E6%B6%88%E8%B4%B9-kafka-%E6%97%B6%E4%B8%8B%E7%BA%BF-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%87%8D%E5%90%AF%E5%90%8E%E7%BB%A7%E7%BB%AD%E6%B6%88%E8%B4%B9">SparkStreaming \u5728\u6D88\u8D39 Kafka \u65F6\u4E0B\u7EBF, \u5982\u4F55\u4FDD\u8BC1\u91CD\u542F\u540E\u7EE7\u7EED\u6D88\u8D39</a></li><li><a href="#spark-%E7%B4%AF%E5%8A%A0%E5%99%A8">Spark \u7D2F\u52A0\u5668</a></li><li><a href="#spark-%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6">Spark \u7684\u5DE5\u4F5C\u673A\u5236</a></li><li><a href="#spark-%E6%A8%A1%E5%9D%97%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B">Spark \u6A21\u5757\u90FD\u6709\u54EA\u4E9B</a></li><li><a href="#dstream-%E5%92%8C-dstreamgraph-%E7%9A%84%E5%8C%BA%E5%88%AB">DStream \u548C DStreamGraph \u7684\u533A\u522B</a></li></ol></li></ol></li></ol><h2 id="spark">Spark</h2><ul><li>Spark \u662F\u57FA\u4E8E\u5185\u5B58\u8BA1\u7B97, MapReduce \u57FA\u4E8E\u78C1\u76D8\u8FD0\u7B97, \u6240\u4EE5\u901F\u5EA6\u66F4\u5FEB.</li><li>Spark \u62E5\u6709\u9AD8\u6548\u7684\u8C03\u5EA6\u7B97\u6CD5, \u57FA\u4E8E DAG \u5F62\u6210\u4E00\u7CFB\u5217\u6709\u5411\u65E0\u73AF\u56FE.</li><li>Spark \u901A\u8FC7 RDD \u7B97\u5B50\u6765\u8FD0\u7B97, \u5177\u6709\u8F6C\u6362\u4E0E\u52A8\u4F5C\u4E24\u79CD\u64CD\u4F5C, \u53EF\u4EE5\u628A\u8FD0\u7B97\u7ED3\u679C\u7F13\u5B58\u5728\u5185\u5B58, \u518D\u8BA1\u7B97\u51FA\u6765.</li><li>Spark \u8FD8\u62E5\u6709\u5BB9\u9519\u673A\u5236 Linage \u7B97\u5B50, \u53EF\u4EE5\u628A\u5931\u8D25\u7684\u4EFB\u52A1\u91CD\u65B0\u6267\u884C.</li></ul><h3 id="spark-%E4%B8%AD-job-stage-task-%E5%88%86%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88"> Spark \u4E2D job, stage, Task \u5206\u522B\u662F\u4EC0\u4E48 </h3><ul><li> job \u662F\u63D0\u4EA4\u7ED9 Spark \u7684\u4EFB\u52A1, \u4F1A\u88AB\u62C6\u5206\u4E3A\u591A\u7EC4 Task, \u6BCF\u4E00\u6B21\u6570\u636E\u7684 Shuffle \u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A stage; \u6BCF\u6B21 action \u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A job. </li><li> stage \u662F job \u6267\u884C\u9700\u8981\u7684\u9636\u6BB5. \u5212\u5206 stage \u4F7F\u6BCF\u4E00\u4E2A stage \u53EA\u6709\u7A84\u4F9D\u8D56, \u53EF\u4EE5\u5B9E\u73B0\u6D41\u8BA1\u7B97, \u540C\u65F6\u6BCF\u4E00\u4E2A Task \u5BF9\u5E94\u4E00\u4E2A\u5206\u533A, \u589E\u52A0\u4E86 Task \u7684\u5E76\u884C\u8FD0\u884C\u91CF. </li><li> Task \u662F stage \u7684\u4EFB\u52A1\u6267\u884C\u5355\u5143, \u901A\u5E38\u548C RDD \u7684 Partition \u6570\u91CF\u76F8\u540C, \u53EA\u662F\u5904\u7406\u4E00\u4E2A Partition \u4E0A\u7684\u6570\u636E; \u6BCF\u4E2A Task \u90FD\u662F\u4E00\u4E2A JVM \u5B9E\u4F8B, JVM \u7684\u5F00\u542F\u4E0E\u9500\u6BC1\u4F1A\u964D\u4F4E\u7CFB\u7EDF\u8FD0\u884C\u6548\u7387; Task \u662F\u4EFB\u52A1\u7684\u6700\u5C0F\u5355\u4F4D, \u6700\u7EC8\u8FD0\u884C\u5728 Executor \u4E2D. </li></ul><h3 id="%E4%BB%80%E4%B9%88%E6%98%AF-rdd">\u4EC0\u4E48\u662F RDD</h3><p> RDD \u5C31\u662F\u5F39\u6027\u5206\u5E03\u5F0F\u6570\u636E\u96C6 Resilient Distributed Datasets, Spark \u7684\u6570\u636E\u62BD\u8C61\u6982\u5FF5, \u662F\u4E00\u79CD\u4E0D\u53EF\u53D8\u5206\u5E03\u5F0F\u5BF9\u8C61\u96C6\u5408; \u6BCF\u4E2A RDD \u90FD\u88AB\u5206\u4E3A\u591A\u4E2A\u5206\u533A, \u8FD0\u884C\u5728\u96C6\u7FA4\u4E0D\u540C\u8282\u70B9\u4E0A, \u62E5\u6709\u591A\u79CD\u4E0D\u540C\u7684 RDD \u7B97\u5B50. </p><ul><li><p> transformation \u4E2D\u6709 map().filter(), flatMap(), groupByKey(), reduceByKey(), sortByKey(), join(), cogroup(), distinct(), sample(), union(), intersection(), cartesian(), pipe() \u7B49. </p></li><li><p> action \u4E2D\u6709 mapPartitions(), foreach(), collect(), count(), take(), top(), takeOrdered(), saveAsTextFile(), saveAsObjectFile(), persist(), unpersist(), checkpoint(), checkpointFile(), checkpointRDD(), getCheckpointFile() \u7B49. </p></li></ul><h4 id="reducebykey-%E5%92%8C-groupbykey-%E7%9A%84%E5%8C%BA%E5%88%AB">reduceByKey \u548C groupByKey \u7684\u533A\u522B</h4><ul><li> reduceByKey \u4F1A\u5728\u7ED3\u679C\u5904\u53D1\u9001\u81F3 Reducer \u524D, \u5BF9\u6BCF\u4E2A Mapper \u5728\u672C\u5730\u8FDB\u884C Merge; \u7C7B\u4F3C\u4E8E MapReduce \u4E2D\u7684 Combiner, \u8FD9\u6837\u505A\u4F7F Map \u7AEF\u8FDB\u884C\u4E00\u6B21 Reduce \u540E\u6570\u636E\u91CF\u4F1A\u5927\u5E45\u5EA6\u51CF\u5C0F, \u4ECE\u800C\u964D\u4F4E\u4F20\u8F93\u91CF, \u4FDD\u8BC1 Reduce \u80FD\u591F\u66F4\u5FEB\u7684\u8FDB\u884C\u7ED3\u679C\u8BA1\u7B97. </li><li> groupByKey \u4F1A\u5BF9\u6BCF\u4E00\u4E2A RDD \u4E2D\u7684 value \u503C\u8FDB\u884C\u805A\u5408\u5F62\u6210\u5E8F\u5217 Iterator, \u6B64\u64CD\u4F5C\u53D1\u751F\u5728 Reduce \u4E0A, \u6240\u4EE5\u4F1A\u4F20\u8F93\u6240\u6709\u7684\u6570\u636E, \u56E0\u800C\u9020\u6210\u8D44\u6E90\u6D6A\u8D39, \u540C\u65F6\u6570\u636E\u6D41\u5F88\u5927\u7684\u65F6\u5019\u8FD8\u4F1A\u9020\u6210\u5185\u5B58\u6EA2\u51FA OutOfMemoryError. </li></ul><h4 id="rdd-%E7%9A%84%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F">RDD \u7684\u521B\u5EFA\u65B9\u5F0F</h4><p>\u4F7F\u7528 <code>makeRDD</code> \u901A\u8FC7\u96C6\u5408\u521B\u5EFA, \u7531\u672C\u5730\u6838\u6570\u51B3\u5B9A\u5206\u533A\u6570\u91CF.</p><p>\u4F7F\u7528\u5916\u90E8\u6570\u636E\u6E90 HDFS \u7684\u65F6\u5019, \u7531 Block \u6570\u91CF\u51B3\u5B9A\u5206\u533A\u6570, \u6700\u4F4E\u662F\u4E24\u4E2A.</p><p>\u7531\u53E6\u4E00\u4E2A RDD \u5F97\u51FA\u7684\u7ED3\u679C\u521B\u5EFA, \u5373\u8F6C\u6362\u65F6\u521B\u5EFA, \u4F1A\u6839\u636E\u7236 RDD \u7684 reduceTask \u6570\u91CF\u51B3\u5B9A\u5206\u533A.</p><h4 id="rdd-%E7%9A%84%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB">RDD \u7684\u4F9D\u8D56\u5173\u7CFB</h4><ol><li>\u5BBD\u4F9D\u8D56: \u591A\u4E2A\u5B50 RDD \u7684\u5206\u533A\u4F9D\u8D56\u540C\u4E00\u4E2A\u7236 RDD \u7684 Partition.</li><li>\u7A84\u4F9D\u8D56: \u7236 RDD \u7684 Partition \u81F3\u591A\u88AB\u5B50 RDD \u7684\u4E00\u4E2A Partition \u4F7F\u7528.</li></ol><h4 id="%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%92%E5%88%86%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB"> \u4E3A\u4EC0\u4E48\u8981\u5212\u5206\u4F9D\u8D56\u5173\u7CFB </h4><p>\u6709\u6548\u533A\u5206\u7B97\u5B50\u95F4\u7684\u5173\u7CFB, \u6709\u5229\u4E8E DAG \u56FE\u5F62\u751F\u548C\u8FD0\u884C\u65F6\u4F9D\u8D56\u76D1\u5BDF;</p><p>\u5982\u679C\u5C06\u4F9D\u8D56\u5173\u7CFB\u6DF7\u6DC6, \u5C06\u4F1A\u5BFC\u81F4\u8FD0\u884C\u6548\u7387\u7684\u5206\u914D\u4E0D\u5747.</p><h4 id="rdd-%E7%9A%84%E7%BC%93%E5%AD%98%E6%8C%81%E4%B9%85%E5%8C%96%E6%9C%BA%E5%88%B6">RDD \u7684\u7F13\u5B58\u6301\u4E45\u5316\u673A\u5236</h4><p>\u4E3B\u8981\u901A\u8FC7 cache, persist, checkpoints \u5B9E\u73B0.</p><ol><li> cache \u4E0E persist: <ul><li>cache \u9ED8\u8BA4\u5C06\u6570\u636E\u5B58\u50A8\u5728\u5185\u5B58\u4E2D, \u9760 persist \u5B9E\u73B0,</li><li> persist \u5B9A\u4E49\u4E86\u591A\u79CD\u6570\u636E\u50A8\u5B58\u7B56\u7565, \u5982\u78C1\u76D8\u5185\u5B58\u591A\u526F\u672C. \u6570\u636E\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\u4F1A\u4EA7\u751F\u5185\u5B58\u6EA2\u51FA, \u65AD\u70B9\u5931\u6548\u7B49\u95EE\u9898, \u4E0D\u80FD\u4FDD\u8BC1\u6570\u636E\u51C6\u786E\u548C\u5B89\u5168. </li><li>\u4E0D\u6539\u53D8 RDD \u7684\u4F9D\u8D56\u5173\u7CFB, \u7A0B\u5E8F\u6267\u884C\u5B8C\u6210\u540E\u56DE\u6536\u7F13\u5B58.</li><li>\u89E6\u53D1 cache \u548C persist \u9700\u8981\u901A\u8FC7 action.</li><li>\u4E0D\u4F1A\u5F00\u542F\u5176\u4ED6 job, \u4E00\u4E2A action \u4E00\u4E2A job \u539F\u5219.</li></ul></li><li> checkpoints: <ul><li>\u5C06\u6570\u636E\u5B58\u50A8\u5728 HDFS \u4E0A\u5B9E\u73B0\u6301\u4E45\u5316.</li><li>\u89E6\u53D1 checkpoints \u9700\u8981\u901A\u8FC7 action, \u4F1A\u5F00\u542F\u65B0\u7684 job.</li><li>\u4F1A\u6539\u53D8 RDD \u4F9D\u8D56\u5173\u7CFB, \u6570\u636E\u4E22\u5931\u540E\u65E0\u6CD5\u901A\u8FC7\u4F9D\u8D56\u5173\u7CFB\u6062\u590D\u6570\u636E; \u7A0B\u5E8F\u6267\u884C\u7ED3\u675F\u540E\u4E0D\u4F1A\u56DE\u6536.</li></ul></li></ol><h3 id="spark-%E8%B0%83%E4%BC%98">Spark \u8C03\u4F18</h3><h4 id="%E4%BF%AE%E6%94%B9%E5%BA%8F%E5%88%97%E5%8C%96%E6%9C%BA%E5%88%B6%E5%8E%8B%E7%BC%A9%E6%95%B0%E6%8D%AE%E9%87%8F"> \u4FEE\u6539\u5E8F\u5217\u5316\u673A\u5236\u538B\u7F29\u6570\u636E\u91CF </h4><p>\u901A\u8FC7 Kryo \u8C03\u6574\u5E8F\u5217\u5316\u6027\u80FD.</p><ul><li><code>conf.set(&quot;spark.serializer&quot;,&quot;org.apache.spark.serializer.KryoSerializer &quot;)</code></li></ul><h4 id="%E6%A0%B9%E6%8D%AE%E4%BD%9C%E4%B8%9A%E7%8E%AF%E5%A2%83-%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1%E6%97%B6%E8%B0%83%E6%95%B4-spark-submitsh-%E5%8F%82%E6%95%B0"> \u6839\u636E\u4F5C\u4E1A\u73AF\u5883, \u63D0\u4EA4\u4EFB\u52A1\u65F6\u8C03\u6574 spark-submit.sh \u53C2\u6570 </h4><pre class="hljs"><code><div><span class="hljs-meta">#</span><span class="bash"> \u914D\u7F6E Executor \u6570\u91CF</span>
 --num-Executors 3
<span class="hljs-meta">#</span><span class="bash"> \u914D\u7F6E driver \u5185\u5B58, \u5355\u4F4D gb</span>
 --driver-memory ng
<span class="hljs-meta">#</span><span class="bash"> \u914D\u7F6E Executor \u7684\u5185\u5B58\u5927\u5C0F, \u5355\u4F4D gb</span>
 --Executor-memory n
<span class="hljs-meta">#</span><span class="bash"> \u914D\u7F6E Executor cpu \u6838\u5FC3\u4F7F\u7528\u4E2A\u6570, \u5355\u4F4D \u4E2A</span>
 --Executor-cores n
</div></code></pre><h4 id="%E6%8F%90%E9%AB%98%E5%B9%B6%E8%A1%8C%E5%BA%A6">\u63D0\u9AD8\u5E76\u884C\u5EA6</h4><ul><li> \u8BBE\u7F6E Task \u6570\u91CF: <code>spark.default.parallelism</code>, \u8BBE\u7F6E\u540E\u4F1A\u5728 Shuffle \u8FC7\u7A0B\u4E2D\u5E94\u7528; \u53EF\u4EE5\u901A\u8FC7\u6784\u9020 SparkConf \u5BF9\u8C61\u65F6\u8BBE\u7F6E <code>new SparkConf().set(&quot;spark.default.parallelism&quot;,&quot;500&quot;)</code></li><li> \u8BBE\u7F6E RDD \u7684 Partition \u6570\u91CF, \u4F7F\u7528 <code>rdd.repartition</code> \u91CD\u65B0\u5206\u533A, \u4F1A\u751F\u6210\u65B0\u7684 RDD \u5E76\u4F7F\u5206\u533A\u53D8\u5927, \u540C\u65F6 Task \u4E5F\u4F1A\u53D8\u591A. </li><li>\u8BBE\u7F6E\u53C2\u6570 <code>sql.Shuffle.partitions = n</code>, \u9002\u5F53\u589E\u5927 n \u7684\u503C.</li></ul><h4 id="rdd-%E7%9A%84%E9%87%8D%E7%94%A8%E5%92%8C%E6%8C%81%E4%B9%85%E5%8C%96">RDD \u7684\u91CD\u7528\u548C\u6301\u4E45\u5316</h4><ul><li>\u9002\u5F53\u7684\u91CD\u7528\u548C\u6301\u4E45\u5316 RDD \u6709\u5229\u4E8E\u51CF\u5C11\u4EE3\u7801\u91CD\u590D\u548C\u91CD\u8BFB, \u901A\u5E38\u662F ca\`che \u548C persist \u65B9\u5F0F\u6301\u4E45\u5316.</li><li> \u6301\u4E45\u5316\u8FC7\u7A0B\u4E2D\u9002\u5F53\u7684\u4F7F\u7528\u5E8F\u5217\u5316\u53EF\u4EE5\u51CF\u5C11\u6570\u636E\u7684\u5927\u5C0F, \u4ECE\u800C\u964D\u4F4E\u5185\u5B58\u548C cpu \u5360\u7528\u7387, \u51CF\u5C11\u7F51\u7EDC IO \u6D88\u8017\u548C\u78C1\u76D8\u5360\u7528; \u5E8F\u5217\u5316\u540E\u8BFB\u53D6\u6570\u636E\u9700\u8981\u53CD\u5E8F\u5217\u5316, \u591A\u4E86\u4E00\u6B21\u5904\u7406. </li><li>\u5E8F\u5217\u5316\u9020\u6210\u4E86\u5185\u5B58\u6EA2\u51FA, \u5C31\u8981\u8003\u8651\u5199\u5165\u78C1\u76D8\u4E86.</li><li>\u4E3A\u4E86\u4FDD\u6301\u6570\u636E\u7684\u53EF\u9760, \u53EF\u4EE5\u4F7F\u7528\u53CC\u526F\u672C\u673A\u5236\u6301\u4E45\u5316.</li></ul><blockquote><p> \u4E00\u4E2A\u526F\u672C\u65F6\u670D\u52A1\u5B95\u673A\u4E86\u5C31\u5F97\u91CD\u65B0\u8BA1\u7B97, \u6301\u4E45\u5316\u6BCF\u4E2A\u6570\u636E\u5355\u5143, \u5E76\u591A\u505A\u5197\u4F59\u4E92\u5907\u6765\u5BB9\u9519. \u9002\u5408\u5927\u5185\u5B58\u573A\u666F. <code>StorageLevel.MEMORY_ONLY_2</code>. </p></blockquote><h4 id="%E9%80%82%E5%BD%93%E5%B9%BF%E6%92%AD%E5%A4%9A%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%9A%84%E5%8F%98%E9%87%8F"> \u9002\u5F53\u5E7F\u64AD\u591A\u6B21\u4F7F\u7528\u7684\u53D8\u91CF </h4><ul><li> \u5047\u8BBE\u4E00\u4E2A job \u9700\u8981 50 \u4E2A Executor, 100 \u4E2A Task, \u5171\u4EAB 1mb \u6570\u636E. <ul><li>\u5728\u4E0D\u4F7F\u7528\u5E7F\u64AD\u53D8\u91CF\u7684\u60C5\u51B5\u4E0B 100 \u4E2A Task \u5C31\u8981\u521B\u5EFA 100 \u4E2A\u5171\u4EAB\u6570\u636E\u526F\u672C.</li><li> \u4F7F\u7528\u5E7F\u64AD\u53D8\u91CF\u540E, 50 \u4E2A Executor \u521B\u5EFA 50 \u4E2A\u6570\u636E\u526F\u672C, \u5E76\u4E14\u4ECE\u5C31\u8FD1\u8282\u70B9\u7684 BlockManager \u4E0A PULL \u5230\u4E00\u4E2A\u8282\u70B9\u4E0A, \u5E7F\u64AD\u53D8\u91CF\u8FD8\u53EF\u4EE5\u51CF\u5C11\u7F51\u7EDC IO. </li></ul></li></ul><blockquote><p>\u901A\u8FC7 sparkContext \u7684 broadcast \u65B9\u6CD5\u628A\u6570\u636E\u8F6C\u6362\u6210\u5E7F\u64AD\u53D8\u91CF:</p></blockquote><pre class="hljs"><code><div>val broadcastArray:Broadcast[Array[Int]]=sc.broadcast(Array(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>))
        sc.broadcast(Array(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>))
</div></code></pre><blockquote><p> Executor \u7684 BlockManager \u5C31\u53EF\u4EE5\u62C9\u53D6\u8BE5\u5E7F\u64AD\u53D8\u91CF\u7684\u526F\u672C\u83B7\u53D6\u5177\u4F53\u7684\u6570\u636E, \u83B7\u53D6\u5E7F\u64AD\u53D8\u91CF\u4E2D\u7684\u503C\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528\u5176 value \u65B9\u6CD5: </p></blockquote><pre class="hljs"><code><div>val array:Array[Int]=broadcastArray.value
</div></code></pre><blockquote><p>\u6CE8\u610F:</p><ol><li>RDD \u6CA1\u6CD5\u5E7F\u64AD, \u4F46\u662F RDD \u7ED3\u679C\u53EF\u4EE5\u5E7F\u64AD.</li><li>Spark \u4E2D\u56E0\u4E3A\u7B97\u5B50\u7684\u771F\u6B63\u903B\u8F91\u662F\u53D1\u9001\u7ED9 Executor \u8FD0\u884C\u7684, Executor \u9700\u8981\u5F15\u7528\u5916\u90E8\u53D8\u91CF\u65F6, \u53EF\u4EE5\u4F7F\u7528\u5E7F\u64AD\u53D8\u91CF.</li><li>\u5E7F\u64AD\u53D8\u91CF\u53EA\u80FD\u5728 Driver \u4E0A\u5B9A\u4E49\u548C\u4FEE\u6539\u53D8\u91CF\u503C.</li><li> \u82E5 Executor \u8C03\u7528\u4E86 Driver \u7684\u53D8\u91CF, \u4E0D\u4F7F\u7528\u5E7F\u64AD\u65F6\u6709\u51E0\u4E2A Task \u5C31\u8981\u521B\u5EFA\u51E0\u4E2A Driver \u7684\u53D8\u91CF\u526F\u672C. \u7528\u4E86\u5E7F\u64AD\u540E\u53EA\u521B\u5EFA\u4E00\u4E2A\u526F\u672C. </li></ol></blockquote><h4 id="%E9%81%BF%E5%85%8D%E4%BA%A7%E7%94%9F-shuffle-%E5%8F%AF%E4%BB%A5%E5%87%8F%E5%B0%91%E7%BD%91%E7%BB%9C-io-%E5%92%8C%E5%88%86%E5%8C%BA%E9%97%B4%E4%BC%A0%E8%BE%93%E6%B6%88%E8%80%97"> \u907F\u514D\u4EA7\u751F Shuffle \u53EF\u4EE5\u51CF\u5C11\u7F51\u7EDC IO \u548C\u5206\u533A\u95F4\u4F20\u8F93\u6D88\u8017 </h4><pre class="hljs"><code><div><span class="hljs-comment">// join \u4F1A\u4EA7\u751F Shuffle</span>
<span class="hljs-comment">// \u4E24\u4E2A RDD \u76F8\u540C\u7684 key \u9700\u8981\u901A\u8FC7\u7F51\u7EDC PULL \u5230\u4E00\u4E2A\u8282\u70B9\u4E0A, \u7531\u4E00\u4E2A Task \u6267\u884C join</span>
<span class="hljs-comment">// val rdd3 = rdd1.join(rdd2)</span>
<span class="hljs-comment">// \u5E7F\u64AD\u53D8\u91CF\u548C Map \u642D\u914D\u7684 join \u64CD\u4F5C\u4E0D\u4F1A\u4EA7\u751F Shuffle</span>
val rdd2Data=rdd2.collect()
        val rdd2DataBroadcast=sc.broadcast(rdd2Data)
<span class="hljs-comment">// \u6BCF\u4E2A Executor \u7684\u5185\u5B58\u90FD\u4F1A\u7F13\u5B58\u4E00\u4EFD rdd2 \u7684\u5168\u91CF\u6570\u636E</span>
<span class="hljs-comment">// \u9700\u8981\u7ED3\u5408\u5B9E\u9645\u786C\u4EF6\u6027\u80FD\u8003\u8651\u5E7F\u64AD</span>
<span class="hljs-comment">// \u5728 rdd1.map() \u4E2D, \u53EF\u4EE5\u4ECE rdd2DataBroadcast \u4E2D\u83B7\u53D6 rdd2 \u7684\u6240\u6709\u6570\u636E</span>
<span class="hljs-comment">// \u82E5\u904D\u5386\u7ED3\u679C\u8868\u793A rdd2 \u4E2D\u67D0\u6761\u6570\u636E\u7684 key \u4E0E rdd1 \u7684\u5F53\u524D\u6570\u636E key \u76F8\u540C, \u5C31\u53EF\u4EE5 join</span>
<span class="hljs-comment">// \u518D\u6839\u636E\u4E1A\u52A1\u5C06 rdd1 \u4E0E rdd2 \u53EF\u8FDE\u63A5\u7684\u6570\u636E\u62FC\u63A5\u6210 String \u6216 Tuple</span>
        val rdd3=rdd1.map(rdd2DataBroadcast)

</div></code></pre><h4 id="%E4%BD%BF%E7%94%A8-map-side-%E9%A2%84%E5%85%88%E8%81%9A%E5%90%88-shuffle"> \u4F7F\u7528 map-side \u9884\u5148\u805A\u5408 Shuffle </h4><ul><li> \u4E00\u5B9A\u8981\u4F7F\u7528 Shuffle \u7684\u573A\u666F\u4E0B, \u65E0\u6CD5\u4F7F\u7528 map \u7C7B\u7B97\u5B50\u66FF\u4EE3, \u5219\u5C3D\u91CF\u4F7F\u7528 map-side \u9884\u805A\u5408\u7B97\u5B50, \u5373\u5728\u5404\u8282\u70B9\u5BF9\u76F8\u540C\u7684 key \u805A\u5408, \u7C7B\u4F3C MapReduce \u7684 Combiner. \u805A\u5408\u540E PULL \u6570\u636E\u5C31\u80FD\u8282\u7701\u78C1\u76D8\u548C\u7F51\u7EDC IO \u5F00\u9500. </li><li> \u82E5\u6761\u4EF6\u5141\u8BB8, \u4F7F\u7528 <code>reduceByKey()</code> \u6216\u8005 <code>aggregateByKey()</code> \u6765\u66FF\u4EE3 <code>groupByKey()</code>, \u524D\u8005\u53EF\u4EE5\u4F7F\u7528\u81EA\u5B9A\u4E49\u51FD\u6570\u805A\u5408 key, \u540E\u8005\u7684\u4F1A\u4F7F\u5168\u91CF\u7684\u6570\u636E\u5728\u8282\u70B9\u95F4\u5206\u53D1, \u6027\u80FD\u76F8\u5BF9\u8F83\u5DEE. </li></ul><h4 id="%E4%BD%BF%E7%94%A8%E9%AB%98%E6%80%A7%E8%83%BD%E7%AE%97%E5%AD%90">\u4F7F\u7528\u9AD8\u6027\u80FD\u7B97\u5B50</h4><ol><li> \u4F7F\u7528 <code>mapPartitions()</code> \u66FF\u4EE3 <code>map()</code><ul><li><code>mapPartitions()</code> \u7C7B\u7684\u7B97\u5B50\u6BCF\u6B21\u8C03\u7528\u4F1A\u5904\u7406 Partition \u4E2D\u6240\u6709\u7684\u6570\u636E, \u76F8\u6BD4\u5355\u6761\u5904\u7406\u6548\u7387\u9AD8\u4E9B, \u4F46\u4F1A\u5360\u7528\u5927\u91CF\u5185\u5B58. </li></ul></li><li> \u4F7F\u7528 <code>foreachPartition()</code> \u66FF\u4EE3 <code>foreach()</code><ul><li>\u539F\u7406\u540C\u4E0A.</li></ul></li><li> \u4F7F\u7528 <code>Filter()</code> \u4E4B\u540E\u8FDB\u884C <code>coalesce()</code><ul><li>\u5BF9\u4E00\u4E2A RDD \u8FC7\u6EE4\u6389\u8F83\u591A\u6570\u636E\u540E\u53EF\u4EE5\u624B\u52A8\u51CF\u5C11\u591A\u4F59\u7684 Partition \u6570\u91CF.</li></ul></li><li> \u4F7F\u7528 <code>repartitionAndSortWithinPartitions()</code> \u66FF\u4EE3 <code>repartition()</code> \u4E0E <code>sort()</code> \u7C7B\u64CD\u4F5C <ul><li> Spark \u5B98\u65B9\u63A8\u8350\u5728 <code>repartition()</code> \u540E\u7684\u6392\u5E8F\u573A\u666F\u4E0B\u4F7F\u7528\u8FD9\u4E2A\u540D\u5B57\u5F88\u957F\u7684\u7B97\u5B50, \u8BE5\u7B97\u5B50\u53EF\u4EE5\u5E76\u884C\u6267\u884C\u91CD\u65B0\u5206\u533A\u7684 shuffle \u548C\u6392\u5E8F. </li></ul></li><li> \u4F7F\u7528 <code>fastutil()</code> \u4F18\u5316\u6570\u636E\u683C\u5F0F <ul><li> fastutil \u662F java \u6807\u51C6\u96C6\u5408\u6846\u67B6\u7684\u6269\u5C55\u5E93, \u63D0\u4F9B\u4E86\u7279\u6B8A\u7684 map, set, list, queue; fastutil \u80FD\u51CF\u5C11\u5185\u5B58\u5F00\u9500. \u9664\u4E86\u4E00\u4E9B\u4F7F\u7528\u5916\u90E8\u53D8\u91CF\u7684\u573A\u666F\u5916, \u5BF9\u4ED8\u67D0\u79CD\u8F83\u5927\u96C6\u5408\u65F6\u4E5F\u53EF\u4EE5\u7528 fastutil \u6539\u5199\u5916\u90E8\u53D8\u91CF. </li></ul></li></ol><blockquote><p>fastutil \u9700\u8981\u7528 maven \u624B\u52A8\u5F15\u5165\u4F9D\u8D56.</p></blockquote><h3 id="sparkstreaming-%E5%9C%A8%E6%B6%88%E8%B4%B9-kafka-%E6%97%B6%E4%B8%8B%E7%BA%BF-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%87%8D%E5%90%AF%E5%90%8E%E7%BB%A7%E7%BB%AD%E6%B6%88%E8%B4%B9"> SparkStreaming \u5728\u6D88\u8D39 Kafka \u65F6\u4E0B\u7EBF, \u5982\u4F55\u4FDD\u8BC1\u91CD\u542F\u540E\u7EE7\u7EED\u6D88\u8D39 </h3><ul><li> \u5229\u7528 checkPoint \u673A\u5236, \u6BCF\u6B21 SparkSteaming \u6D88\u8D39 Kafka \u540E\u5C06 Kafka Offsets \u66F4\u65B0\u5230 checkPoint, \u91CD\u542F\u540E\u8BFB\u53D6 checkPoint \u5C31\u80FD\u7EE7\u7EED. </li><li> \u5728 SparkStreaming \u4E2D\u542F\u7528\u9884\u5199\u65E5\u5FD7, \u540C\u6B65\u4FDD\u5B58\u6240\u6709\u6536\u5230\u7684 Kafka \u6570\u636E\u5230 HDFS \u4E2D, \u6545\u969C\u540E\u65B9\u4FBF\u6062\u590D\u5230\u4E0A\u6B21\u672A\u77E5, \u4EE3\u4EF7\u662F\u50A8\u5B58\u7A7A\u95F4\u5360\u7528. </li></ul><h3 id="spark-%E7%B4%AF%E5%8A%A0%E5%99%A8">Spark \u7D2F\u52A0\u5668</h3><p>\u7D2F\u52A0\u5668\u76F8\u5F53\u4E8E\u7EDF\u7B79\u5927\u53D8\u91CF, \u5E38\u7528\u4E8E\u8BA1\u6570\u7EDF\u8BA1\u5DE5\u4F5C. \u7D2F\u52A0\u5668\u901A\u5E38\u88AB\u89C6\u4E3A RDD \u7684 map().filter() \u64CD\u4F5C\u7684\u526F\u4EA7\u7269.</p><h3 id="spark-%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6">Spark \u7684\u5DE5\u4F5C\u673A\u5236</h3><ol><li>Client \u63D0\u4EA4 job \u540E, Driver \u8FD0\u884C main \u65B9\u6CD5\u5E76\u521B\u5EFA SparkContext</li><li>\u6267\u884C RDD \u7B97\u5B50\u540E\u5F62\u6210 DAG \u56FE, \u518D\u79FB\u4EA4\u7ED9 DAGScheduler \u5904\u7406.</li><li>DAGScheduler \u6309\u7167 RDD \u7684\u4F9D\u8D56\u5173\u7CFB\u5212\u5206 stage, \u8F93\u5165 Task, Scheduler \u53BB\u5212\u5206 Task, .</li><li> set \u5206\u53D1\u5230\u5404\u4E2A\u8282\u70B9\u7684 Executor, \u5E76\u4EE5\u591A\u7EBF\u7A0B\u7684\u65B9\u5F0F\u6267\u884C Task, \u4E00\u4E2A\u7EBF\u7A0B\u4E00\u4E2A Task, \u4EFB\u52A1\u7ED3\u675F\u540E\u6839\u636E\u7C7B\u578B\u8FD4\u56DE\u7ED3\u679C. </li></ol><h3 id="spark-%E6%A8%A1%E5%9D%97%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B">Spark \u6A21\u5757\u90FD\u6709\u54EA\u4E9B</h3><h3 id="dstream-%E5%92%8C-dstreamgraph-%E7%9A%84%E5%8C%BA%E5%88%AB">DStream \u548C DStreamGraph \u7684\u533A\u522B</h3></div></div>`,2),o=E({__name:"spark",setup(e){return(l,i)=>(F(),B(D,null,[C,A(u)],64))}});export{o as default};
